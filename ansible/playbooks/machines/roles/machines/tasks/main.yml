
- name: ssh access
  register: sg
  ec2_group:
    name: box
    description: sg with rule descriptions
    vpc_id: "{{ lookup('env', 'vpc_id') }}"
    region: eu-west-2
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: "{{ lookup('env', 'me') }}"
        rule_desc: "me to workers"
      - proto: tcp
        from_port: 6443
        to_port: 6443
        cidr_ip: "10.0.0.0/25"
        rule_desc: "public to kubernetes"
      - proto: tcp
        from_port: 6443
        to_port: 6443
        cidr_ip: "10.0.0.128/25"
        rule_desc: "private to kubernetes"
    rules_egress:
        - proto: tcp
          from_port: 22
          to_port: 22
          group_id: "{{ lookup('env', 'infrastructure_sg_id') }}"
          rule_desc: "workers to infra"
        - proto: tcp
          from_port: 80
          to_port: 80
          cidr_ip: "0.0.0.0/0"
          rule_desc: "web updates"
        - proto: tcp
          from_port: 443
          to_port: 443
          cidr_ip: "0.0.0.0/0"
          rule_desc: "web tls updates"
        - proto: tcp
          from_port: 22
          to_port: 22
          cidr_ip: "0.0.0.0/0"
          rule_desc: "ssh out"
        - proto: tcp
          from_port: 6443
          to_port: 6443
          cidr_ip: "0.0.0.0/0"
          rule_desc: "kubernetes out"
    tags:
      Name: box

- name: Provision a set of instances
  ec2:
     key_name: "vvv-sam-n550jv"
     group: box
     vpc_subnet_id: " {{ lookup('env', 'public_subnet_id') }}"
     instance_type: t3.medium
     image: "{{ ami_id }}"
     region: "{{ region }}"
     wait: true
     exact_count: 2
     count_tag: worker
     instance_tags:
        Name: worker
        worker: yes
  register: ec2

- pause:
    seconds: 15

- ec2_instance_info:
    filters:
      "tag:Name": worker
      "instance-state-name": running
  register: facts

- name: write instance infos
  debug:
    msg: "{{ facts | json_query('instances[*].public_dns_name') }}"

- local_action:
    module: copy
    content: "{\"workers\": {{ facts | json_query('instances[*].public_dns_name') }}
    }"
    dest: "{{ lookup('env', 'OUTPUT_PATH') }}"
