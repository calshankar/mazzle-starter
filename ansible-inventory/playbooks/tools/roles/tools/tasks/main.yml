- name: Upgrade all packages to the latest version
  apt:
    update_cache: yes
    name: "*"
    state: latest

- name: install nginx
  package:
    name: nginx

- name: install php7.4-mysql
  package:
      name: php7.4-mysql

- name: install php7.4-fpm
  package:
    name: php7.4-fpm

- name: php config file
  template:
    src: php.ini
    dest: /etc/php/7.4/fpm/php.ini

- name: nginx configuration file
  template:
    src: default
    dest: /etc/nginx/sites-available/default

- name: start nginx
  systemd:
    name: nginx
    enabled: yes
    state: started

- name: reload nginx
  systemd:
    name: nginx
    state: reloaded

- name: start php7.4-fpm
  systemd:
    name: php7.4-fpm
    enabled: yes
    state: started

- name: install MySQL
  package:
      name: mysql-server

- name: test script
  template:
    src: test.php
    dest: /var/www/html/test.php


- name: install packages
  package: "{{ item }}"
  with_items:
  - nginx
  - dnsutils
  - fail2ban
  - vim
  - php-xmlrpc

- name: install gpg
  package:
    name: gpg

- name: install gpg-agent
  package:
    name: gpg-agent

- name: Add docker key
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present

- apt_repository:
    repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
    state: present
    filename: kubernetes.list

# https://germaniumhq.com/2019/02/14/2019-02-14-Disabling-Swap-for-Kubernetes-in-an-Ansible-Playbook/
- name: disable swap
  shell: swapoff -a

- name: Disable SWAP in fstab since kubernetes can't work with swap enabled (2/2)
  replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
    replace: '# \1'

- name: Ensure swap disabled
  lineinfile:
    path: /etc/sysctl.conf
    line: "vm.swappiness = 0"

- name: update apt
  apt:
    update_cache: yes

- name: install docker
  package:
    name: docker.io
    state: present

- name: setup docker to start
  systemd:
    name: docker.service
    enabled: yes
    state: started

- name: install apt-transport-https
  package:
    name: apt-transport-https
    state: present

- name: install kubernetes binaries
  package:
    name: "{{ item }}"
  with_items:
    - kubelet
    - kubeadm
    - kubectl

- name: check if kubernetes setup
  stat:
    path: /etc/kubernetes/admin.conf
  register: etc_kubernetes

- name: create kubernetes master
  shell: kubeadm init --apiserver-advertise-address {{ ansible_default_ipv4.address }}
  register: kubdadm_init
  when: not etc_kubernetes.stat.exists
- debug: var=kubdadm_init.stdout_lines

- name: create kube config directory
  file:
    state: directory
    path: "~/.kube"
  become: false

- name: copy cluster configuration
  shell: "sudo cp /etc/kubernetes/admin.conf ~/.kube/config"

- name: correct group of kubernetes cluster config file
  shell: "sudo chown $(id -u):$(id -g) ~/.kube/config"
  become: false

- name: install networking
  shell: kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"
  become: false

- name: create join command
  shell: "kubeadm token create --print-join-command"
  register: join_command
- debug: var=join_command.stdout_lines

- name: install postgres
  package:
    name: postgresql
    state: present

- name: Make sure we have a 'wheel' group
  group:
    name: wheel
    state: present

- name: Add the user 'sam'
  user:
    name: sam

- name: Set authorized key taken from file
  authorized_key:
    user: sam
    state: present
    key: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDgRS1o5gd1uTo6QMHV+PqKtk7pLgE1hCxtHwZzMQrNlMlff6XnXu0z+tOSOvn5VA0Qmk9flU3hGzKC6acFe9uxTVp9DIFkvLmTS6OvOAdPrbMxvZsbfD57APllHT0gWt+GheydX3B6XpBmxkRsiZP1WyAYU1msDqfGh79El+r8qLvy2wom7A9494DsjoJPu3BqFgPG/cAvITVb+iEIG5YQrAILVydDXoFCuOmMSZ7h4z0nPHklLUfdyHg4D+6Q+cMjyt5L2Rr+YIX6coUT/QCjYqm+K6gJmWxOYsF2KW5aiTJnrDGKJ4mIChvv0BUkQYNwFaoQrFcVPmFuHpkjY2JO+CasrEuAKQzDu+YEIj1e3ZjEWriyenGYTxHkDhsOoH0KnoDzl4uMAplwr/RaU2MfSZ6zWNlpwkoP/N7QXVjzdgfJkJUbwjHsl+UmKRYH46BOOaerinWatN3n2ASzEBTasvyBcYyf5HbMGFG5N4jO7fqAG80xr3/tOUJgb0lT+1dLABrjcOjkNp/Sgb1psAQ/a6gA3phTRNC8boU7aq8zRbPMKqAGmHvcRtDSDkXnH9d/EipRTUK0Imn5zy3/8U2/r0Y7pXUy9a51YXlGP6A1h7arpcqP8Qc3vzSeHGTnOmiX/ZwEIIwlfojwbABuIwXFlPGbHyRA/e/U+Wuxw8UfHQ==

- name: Allow 'wheel' group to have passwordless sudo
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: '^%wheel'
    line: '%wheel ALL=(ALL) NOPASSWD: ALL'
    validate: 'visudo -cf %s'

- name: Add sudoers users to wheel group
  user:
    name: sam
    groups: wheel
    append: yes
    state: present
    createhome: yes

- local_action:
    module: copy
    content: "{\"secrets\": {\"kubeadm_join_command\": {{ join_command.stdout | to_json }} } }"
    dest: "{{ lookup('env', 'OUTPUT_PATH') }}"
  become: false
