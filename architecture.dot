digraph G {
  label="pipeline";
  rankdir=TB;



"packer/source-ami*" -> { "terraform/bastion";
                          "packer/vault-ami*";
                          "terraform/web"
                        }

"terraform/bastion" -> "@repository-upload/nodejs_12.13.1_amd64"
"terraform/repository" -> "@repository-upload/nodejs_12.13.1_amd64"

"@repository-upload/nodejs_12.13.1_amd64" -> "@shell/dpkg-scanpackages"

"terraform/web" -> "@ansible/kubernetes-join";
"terraform/bastion" -> "@ansible/kubernetes-join";
"terraform/services" -> "@ansible/kubernetes-join";
"@ansible/kubernetes" -> "@ansible/kubernetes-join";



"terraform/services" -> "@ansible/worker-keys"

"terraform/bastion" -> "@ansible/deploy";
"terraform/bastion" -> "@ansible/web";
"@ansible/worker-provision" -> "terraform/repository-volume" -> "terraform/repository";

"terraform/repository" -> {
  "terraform/bastion";
  "terraform/private";
  "terraform/prometheus";
}

"terraform/bastion" -> "ansible/consul-cluster";
"@ansible/worker-keys" -> "ansible/consul-cluster";
"terraform/services" -> "ansible/consul-cluster";

"gradle/app" -> "terraform/web" -> "@ansible/web" -> "@ansible/deploy";
"@ansible/kubernetes" -> "@ansible/kubernetes-worker";
"@ansible/worker-provision" -> {

  "@ansible/worker-keys";
  "terraform/web";
  "gradle/app";
  "@ansible/kubernetes";
  "terraform/buckets";
  "terraform/vault";
  "terraform/dns";
  "terraform/bastion";
  "terraform/vault-volume";
  "packer/source-ami*";
  "terraform/security";
  "terraform/private";
  "packer/vault-ami*"
}

"terraform/buckets" -> {
  "terraform/vault";
  "terraform/dns";
  "terraform/bastion";
  "terraform/vault-volume";
  "packer/source-ami*";
  "terraform/security";
  "terraform/private";
  "packer/vault-ami*"
}

"packer/vault-ami*" -> "terraform/vault"

"@terraform/vpc" -> "@ansible/machines*" -> "@ansible/worker-provision"

"terraform/vault" -> "terraform/private";

{ "terraform/vault";
"terraform/bastion";
"terraform/private"; } -> "terraform/services";

"terraform/vault-volume" -> "terraform/vault";

 "terraform/dns" -> "terraform/private";
 "terraform/dns" -> "terraform/vault";

"terraform/security" -> "terraform/vault"

"terraform/security" -> "terraform/bastion";
"terraform/security" -> "terraform/private";

"chef/ubuntu_java" -> "packer/ubuntu-java*";

"@ansible-local/devbox" -> "@terraform/users" -> "@terraform/vpc";

"terraform/bastion" -> "@shell/root-certificates";

"terraform/vault" -> "@shell/root-certificates";
"terraform/bastion" -> "terraform/vault";

"terraform/bastion" -> "@shell/init-vault";
"terraform/vault" -> "@shell/init-vault";

"@shell/root-certificates" -> "packer/authenticated-ami*";

"packer/ubuntu-java*" -> "terraform/private";

"packer/source-ami*" -> "packer/authenticated-ami*";
"packer/authenticated-ami*" -> "packer/ubuntu-java*";
"packer/authenticated-ami*" -> "@shell/init-vault";
"@shell/root-certificates" -> "@shell/init-vault";

 "terraform/dns" -> "terraform/prometheus";
 "packer/source-ami*" -> "terraform/prometheus";
}
